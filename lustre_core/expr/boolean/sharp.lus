/*
Expression ::= #( ExpressionList )
ExpressionList ::= [Expression] {, Expression}

```c
void Lustre_diese_step(_boolean i1[3],_boolean *out){
  int cpt,i;
  cpt=0;
  for (i = 0 ; i < 3 ; i += 1) if (i1[i] == _true) cpt++;
  *out = (0 <= cpt && cpt <= 1) ? _true : _false;

} 
```
*/

function sharp(i1,i2,i3: bool) returns (o: bool)
let
  o = #(i1, i2, i3);
tel


